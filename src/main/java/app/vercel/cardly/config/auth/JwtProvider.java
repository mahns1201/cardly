package app.vercel.cardly.config.auth;import io.jsonwebtoken.*;import org.springframework.beans.factory.annotation.Value;import org.springframework.stereotype.Component;import java.util.Date;@Componentpublic class JwtProvider {    private final String jwtSecret;    private final long jwtExpirationMs;    public JwtProvider(        @Value("${jwt.secret}") String jwtSecret,        @Value("${jwt.expiration-ms}") long jwtExpirationMs    ) {        this.jwtSecret = jwtSecret;        this.jwtExpirationMs = jwtExpirationMs;    }    public String generateToken(Long userId) {        Date now = new Date();        Date expiry = new Date(now.getTime() + jwtExpirationMs);        return Jwts.builder()                .setSubject(userId.toString())                .setIssuedAt(now)                .setExpiration(expiry)                .signWith(SignatureAlgorithm.HS512, jwtSecret)                .compact();    }    public Long getUserIdFromToken(String token) {        Claims claims = Jwts.parser()                .setSigningKey(jwtSecret)                .parseClaimsJws(token)                .getBody();        return Long.parseLong(claims.getSubject());    }    public boolean validateToken(String token) {        try {            Jwts.parser().setSigningKey(jwtSecret).parseClaimsJws(token);            return true;        } catch (Exception e) {            return false;        }    }}