package app.vercel.cardly.service;import app.vercel.cardly.api.auth.dto.RegisterRequestDto;import app.vercel.cardly.domain.user.User;import app.vercel.cardly.domain.user.UserRepository;import lombok.RequiredArgsConstructor;import org.springframework.security.crypto.password.PasswordEncoder;import org.springframework.stereotype.Service;@Service@RequiredArgsConstructorpublic class AuthService {    private final UserRepository userRepository;    private final PasswordEncoder passwordEncoder;    public User register(RegisterRequestDto registerRequestDto) {        if (userRepository.findByEmail(registerRequestDto.getEmail()).isPresent()) {            throw new IllegalArgumentException("이미 가입된 이메일입니다.");        }        User user = User.builder()                .email(registerRequestDto.getEmail())                .password(passwordEncoder.encode(registerRequestDto.getPassword()))                .name(registerRequestDto.getName())                .build();        return userRepository.save(user);    }}